<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>true</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>'''
MIT License

Copyright (c) 2017 Stephen

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''

#Required to use klayout functions
import pya
from pya import *
import importlib
##     

#Import Libraries
import ExampleLibrary.AddDropRing #ExampleLibrary is the folder, AddDropRing is the Filename, to use the functions within the file you use: ExampleLibrary.AddDropRing.FUNCTION-NAME()
#ADD MORE HERE
##

#Updates Libraries if they are changed during coding, without this you would have to restart klayout to see your changes.
importlib.reload(ExampleLibrary.AddDropRing)
#ADD MORE HERE
##

#Declares the Library Class to add into the 'instance' button
class SiEPIC(pya.Library):
  """
  The library where we will put the PCell into 
  """

  def __init__(self):

    print("Initializing ExampleLibrary PCells library.") #Output Message
  
    # Set the description
    self.description = "Example of Libraries" #Description of the library
    
    # Create the Device Entries
    self.layout().register_pcell("[1] AddDropRing", ExampleLibrary.AddDropRing.AddDropRing())#registers the device name. '[1] AddDropRing' is what you'll see on the interface, 'ExampleLibrary.AddDropRing.AddDropRing()' is the class declared in the AddDropRing file  
    
    # Register with the name "ExampleLibrary".
    self.register("ExampleLibrary")

# Instantiate and register the library
SiEPIC()
#LASTLY: Remember to click the option panel near the top and enable 'run on startup' to have it automatically show up in your 'instance' button
    </text>
</klayout-macro>
